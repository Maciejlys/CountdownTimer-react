{"version":3,"sources":["Utils/dateUtil.ts","Components/Loading.tsx","Components/Counter.tsx","Components/Counters.tsx","Components/Navbar.tsx","App.tsx","index.tsx"],"names":["countDownInterval","dueDate","dueTime","now","Date","getTime","distance","getTotalTime","Math","floor","Loading","className","Counter","id","name","useState","targetTime","setTargetTime","isLoading","setIsLoading","isExpired","setIsExpired","useEffect","interval","setInterval","newDate","map","date","clearInterval","days","hours","minutes","seconds","Counters","counters","index","Navbar","names","setIndex","current","onClick","App","data","setCounters","setNames","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06b5c692.chunk.js","sourcesContent":["const getTotalTime = (dueDate: string, dueTime: string) => {\r\n  return new Date(dueDate + \" \" + dueTime).getTime();\r\n};\r\n\r\nexport const countDownInterval = (dueDate: string, dueTime: string) => {\r\n  const now = new Date().getTime();\r\n\r\n  var distance = getTotalTime(dueDate, dueTime) - now;\r\n\r\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  return [days, hours, minutes, seconds];\r\n};\r\n","import React from \"react\";\r\nimport \"../Styles/Loading.css\";\r\n\r\ninterface LoadingProps {}\r\n\r\nexport const Loading: React.FC<LoadingProps> = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <div className=\"loader\"></div>\r\n      <h1>Loading</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SingleCounter } from \"./Counters\";\r\nimport { countDownInterval } from \"../Utils/dateUtil\";\r\nimport { Loading } from \"./Loading\";\r\nimport \"../Styles/Counter.css\";\r\n\r\nexport const Counter: React.FC<SingleCounter> = ({\r\n  id,\r\n  name,\r\n  dueDate,\r\n  dueTime,\r\n}) => {\r\n  const [targetTime, setTargetTime] = useState([0, 0, 0, 0]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isExpired, setIsExpired] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    let interval = setInterval(() => {\r\n      setTargetTime(() => {\r\n        setIsLoading(false);\r\n        let newDate = countDownInterval(dueDate, dueTime);\r\n        newDate.map((date) => {\r\n          if (date < 0) {\r\n            setIsExpired(true);\r\n            clearInterval(interval);\r\n          } else {\r\n            setIsExpired(false);\r\n          }\r\n        });\r\n        return newDate;\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [id, dueTime, dueDate]);\r\n\r\n  const [days, hours, minutes, seconds] = targetTime;\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  if (isExpired) {\r\n    return <span className=\"up\">The time is up!</span>;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"timers\">\r\n        <div className=\"timer\">\r\n          <header className=\"big-text\">{days}</header>\r\n          <footer className=\"small-text\">days</footer>\r\n        </div>\r\n        <div className=\"timer\">\r\n          <header className=\"big-text\">{hours}</header>\r\n          <footer className=\"small-text\">hours</footer>\r\n        </div>\r\n        <div className=\"timer\">\r\n          <header className=\"big-text\">{minutes}</header>\r\n          <footer className=\"small-text\">minutes</footer>\r\n        </div>\r\n        <div className=\"timer\">\r\n          <header className=\"big-text\">{seconds}</header>\r\n          <footer className=\"small-text\">seconds</footer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Counter } from \"./Counter\";\r\nimport \"../Styles/Counters.css\";\r\n\r\ninterface CountersProps {\r\n  counters: SingleCounter[];\r\n  index: number;\r\n}\r\n\r\nexport interface SingleCounter {\r\n  id: string;\r\n  name: string;\r\n  dueDate: string;\r\n  dueTime: string;\r\n}\r\n\r\nexport const Counters: React.FC<CountersProps> = ({ counters, index }) => {\r\n  return (\r\n    <section className=\"mid\">\r\n      <div className=\"name\">\r\n        <h2>{counters[index].name}</h2>\r\n      </div>\r\n      <div className=\"counter\">\r\n        <Counter {...counters[index]} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../Styles/Navbar.css\";\r\n\r\ninterface NavbarProps {\r\n  names: string[];\r\n  setIndex: (index: number) => void;\r\n  current: number;\r\n}\r\n\r\nexport const Navbar: React.FC<NavbarProps> = ({ names, setIndex, current }) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"line\"></div>\r\n      {names.map((name, index) => {\r\n        return (\r\n          <button\r\n            key={index}\r\n            className={`btn ${index === current && \"active-btn\"}`}\r\n            onClick={() => setIndex(index)}>\r\n            {name}\r\n          </button>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Counters } from \"./Components/Counters\";\r\nimport { Loading } from \"./Components/Loading\";\r\nimport { Navbar } from \"./Components/Navbar\";\r\nimport data from \"./data/data.json\";\r\n\r\nconst getNames = () => {\r\n  return data.map((name) => name.name);\r\n};\r\n\r\nfunction App() {\r\n  const [counters, setCounters] = useState(data);\r\n  const [names, setNames] = useState([\"\"]);\r\n  const [index, setIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setNames(getNames());\r\n    setCounters(data);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <main className={`load ${!isLoading && \"loaded\"}`}>\r\n        <Loading />\r\n      </main>\r\n      <Navbar names={names} setIndex={setIndex} current={index} />\r\n      <Counters counters={counters} index={index} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}